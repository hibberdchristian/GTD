<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_in_email_action">
    <sysevent_in_email_action action="INSERT_OR_UPDATE">
        <action>record_action</action>
        <active>true</active>
        <assignment_operator/>
        <condition_script/>
        <description/>
        <event_name>email.read</event_name>
        <filter_condition table="sys_email">type=received^subjectSTARTSWITHInvitation:^EQ<item endquery="false" field="type" goto="false" newquery="false" operator="=" or="false" value="received"/>
            <item endquery="false" field="subject" goto="false" newquery="false" operator="STARTSWITH" or="false" value="Invitation:"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <from/>
        <name>Google Calendar Sync</name>
        <order>100</order>
        <reply_email/>
        <required_roles/>
        <script><![CDATA[(function runAction(/*GlideRecord*/ current, /*GlideRecord*/ event, /*EmailWrapper*/ email, /*ScopedEmailLogger*/ logger, /*EmailClassifier*/ classifier) {
	
	// Create REST Get Request to pick-up the event details
	try {
		
		var r = new sn_ws.RESTMessageV2('Google Calendar','Default GET');
		r.setStringParameterNoEscape('calendarId','gtd.applications@gmail.com');
		var response = r.execute();
		var responseBody = response.getBody();
		var httpStatus = response.getStatusCode();
		
		// Parse the reponse
		var parsedEvent = JSON.parse(responseBody);
		for (i=0; i<parsedEvent.items.length; i++) {
			
			// Declare each variable to be used
			var summary = parsedEvent.items[i].summary; // Summary is the name of the event
			var organizer = parsedEvent.items[i].organizer.email;
			var start = parsedEvent.items[i].start.dateTime;
			var end = parsedEvent.items[i].end.dateTime;
			var eventId = parsedEvent.items[i].id; // This is the event ID generated by Google
			
			// Check if the event already exists
			current.addQuery('event_id',eventId);
			current.query();
			if (current.next()) {
				
				// If the event already exists then update
				current.description = summary;
				current.update();
				
				gs.info('Event ' + eventId + ' successfully updated');
				
			} else {
				
				// Otherwise create a new event
				current.description = summary;
				current.event_id = eventId;
				current.insert();
				
				gs.info('Event ' + eventId + ' successfully created');
				
			}
			
		}
		
	} 
	
	// Catch error
	catch(err) {
		
		var message = err.message;
		
		}

})(current, event, email, logger, classifier);]]></script>
        <stop_processing>false</stop_processing>
        <sys_class_name>sysevent_in_email_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-11-20 04:56:30</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ba7250a04f59801001ab9acf9310c7ad</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Google Calendar Sync</sys_name>
        <sys_overrides/>
        <sys_package display_value="GTD" source="x_380098_gtd">f8b6f91fdb663300506da08a489619bc</sys_package>
        <sys_policy/>
        <sys_scope display_value="GTD">f8b6f91fdb663300506da08a489619bc</sys_scope>
        <sys_update_name>sysevent_in_email_action_ba7250a04f59801001ab9acf9310c7ad</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-11-20 06:04:15</sys_updated_on>
        <table>x_380098_gtd_events</table>
        <template/>
        <type/>
    </sysevent_in_email_action>
</record_update>
