<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,$rootScope,$uibModal,spUtil,spModal) {
	/* widget controller */
	var c = this;

	/* pickup the sys_id from the selected item on the board */
	$rootScope.$on('selectTask', function(event,data) {
		c.server.get({
			/* call the server to get the record data */
			action: 'getTask',
			taskID: $rootScope.taskID
		}).then(function(r) {
			/* assigned the record values to c.data object */
			c.data.title = r.data.task.title;
			c.data.category = r.data.task.category;
			c.data.assigned_to = r.data.task.assigned_to;
			c.data.priority = r.data.task.priority;
			c.data.taskID = r.data.task.sys_id;
			c.data.notes = r.data.task.notes;
			c.data.user = r.data.user;
			console.log(c.data)
		}).then(function() {
			$scope.user = {
				/* user object for the sn-record-picker */
				displayValue: c.data.assigned_to.name,
				value: c.data.assigned_to.sys_id,
				name: 'user'
			};
			$scope.category = {
				/* category object for the sn-record-picker */
				displayValue: c.data.category.name,
				value: c.data.category.value,
				name: 'category'
			}
		}).then(function() {
			/* open the Modal */
			c.modalInstance = $uibModal.open({
				templateUrl: 'editTaskModal',
				scope: $scope,
				size: 'lg'
			});
		});
	});

	/* updates to original record from the modal and re-loads the page */
	c.updateTask = function() {
		var updateTask = {
			action: 'updateTask',
			taskID: c.data.taskID,
			taskCategory: $scope.category.value,
			taskPriority: c.data.priority,
			taskAssignedTo: $scope.user.value,
			taskTitle: c.data.title
		}
		for (var key in updateTask) {
			if (updateTask[key] == null || updateTask[key] == "") {
				spModal.alert("Please complete all fields")
				return;
			}
		}
		c.server.get(updateTask).then(function(r) {
			c.modalInstance.close();
			location.reload();
		});
	}
	
	c.updateNotes = function() {
		var updateNotes = {
			action: 'updateNotes',
			taskID: c.data.taskID,
			noteContent: document.getElementById("note-content").value
		}
		if (updateNotes.noteContent == '') {
			return;
		}
		c.server.get(updateNotes).then(function(r) {
			var content = document.createElement("p");
			var author = document.createElement("strong");
			author.append(c.data.user + ":");
			content.append(author);
			content.append(" " + updateNotes.noteContent);
			document.getElementById("note-list").prepend(content);
			document.getElementById("note-content").value = '';
		});
	}
	
	c.newUser = function() {
		var newUser = {
			action: 'newUser',
			taskID: c.data.taskID,
			userName: document.getElementById("user-name").value
		}
		if (newUser.userName == '') {
			return;
		}
		c.server.get(newUser).then(function(r) {
				$scope.user.displayValue  = newUser.userName;
				$scope.user.value = r.data.new_user;
//				document.getElementById("assigned-to").getElementsByClassName("select2-chosen")[0].innerText = c.data.new_user;
				$('#collapse').collapse('hide');
		})
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-heading {
  color: #fff;
  background-color: #2C3E50;
  border-color: #2C3E50;
}
.panel-footer {
  background-color: #2C3E50;
  border-color: #2C3E50;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>edit_task_modal</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Edit Task Modal</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */

	if (input && input.taskID) {
		data.user = gs.getUserName();
		var task = new GlideRecord('x_380098_gtd_tasks');
		var notes = new GlideRecord('sys_journal_field');
		var user = new GlideRecord('sys_user');
		/* gets the selected task data from the server */
		if (task.get(input.taskID)) {
			if (input.action == 'getTask') {
				data.task = {};
				$sp.getRecordDisplayValues(data.task, task, "title,sys_id");
				data.task.priority = task.getValue('priority');
				data.task.assigned_to = {
					name: task.getDisplayValue('assigned_to'),
					sys_id: task.getValue('assigned_to')
				}
				data.task.category = {
					name: task.getDisplayValue('category'),
					value: task.getValue('category')
				}
				data.task.notes = [];
				notes.addQuery('element_id',input.taskID);
				notes.orderByDesc('sys_created_on');
				notes.query();
				while (notes.next()) {
					var note = {};
					$sp.getRecordDisplayValues(note, notes, "sys_created_by,sys_created_on,value");
					data.task.notes.push(note);
				}
			}
			/* updates the selected task data */
			else if (input.action == 'updateTask') { 
				task.title = input.taskTitle; 
				task.category = input.taskCategory;
				task.priority = input.taskPriority;
				task.assigned_to = input.taskAssignedTo;
				task.update(); 
			}
		}
		/* updates the work notes for the task */
		if (input.action == 'updateNotes') {
			notes.initialize();
			notes.element_id = input.taskID;
			notes.value = input.noteContent;
			notes.element = 'work_notes';
			notes.name = 'x_380098_gtd_tasks';
			notes.insert();
		}
		else if (input.action == 'newUser') {
			user.initialize();
			user.name = input.userName;
			data.new_user = user.insert();
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-07-30 07:18:41</sys_created_on>
        <sys_id>7ac7b688db0f3300831ce37a4896199d</sys_id>
        <sys_mod_count>198</sys_mod_count>
        <sys_name>Edit Task Modal</sys_name>
        <sys_package display_value="GTD" source="x_380098_gtd">f8b6f91fdb663300506da08a489619bc</sys_package>
        <sys_policy/>
        <sys_scope display_value="GTD">f8b6f91fdb663300506da08a489619bc</sys_scope>
        <sys_update_name>sp_widget_7ac7b688db0f3300831ce37a4896199d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-08-20 07:09:45</sys_updated_on>
        <template><![CDATA[<script type="text/ng-template" id="editTaskModal">

<div class="panel panel-default">
  <div class="panel-heading clearfix">
    <h4 class="panel-title">Edit Task</h4>
  </div>
  <div class="panel-body wrapper-xl">
    <form>

      <div class="row">
        <div class="form-group col-xs-4" id="assigned-to">
          <label for="taskAssignedTo"><span class="glyphicon glyphicon-plus" data-toggle="collapse" href="#collapse" aria-expanded="false" aria-controls="collapse" aria-hidden="true"></span>  Assigned To</label>
          <sn-record-picker field="user" table="'sys_user'" display-field="'name'" value-field="'sys_id'" search-fields="'name'" page-size="20" ></sn-record-picker>
        </div>
        <div class="form-group col-xs-4">
          <label for="taskPriority">Priority</label>
          <select type="text" class="form-control" id="taskPriority" ng-model="c.data.priority">
            <option>1</option>
            <option>2</option>
            <option>3</option>
          </select>
        </div>
        <div class="form-group col-xs-4">
          <label for="taskCategory">Category</label>
          <sn-record-picker field="category" table="'sys_choice'" default-query="'name=x_380098_gtd_tasks^element=category'" display-field="'label'" value-field="'value'" search-fields="'label'" page-size="20" ></sn-record-picker>
        </div>
      </div>

      <div class="row well collapse" id="collapse">
        <div class="form-group">
          <label for="newUser">New User</label>
          <div class="input-group" id="newUser">
            <input type="text" class="form-control" id="user-name" placeholder="Insert full name"/>
            <span class="input-group-btn">
              <button class="btn btn-default" type="button" ng-click="c.newUser()">Create</button>
            </span>
          </div>
        </div>
      </div>

      <div class="form-group">
        <label for="taskTitle">Task</label>
        <input type="text" class="form-control" id="taskTitle" ng-model="c.data.title"/>
      </div>
      <div class="form-group">
        <label for="taskNotes">Notes</label>
        <div class="input-group" id="taskNotes">
          <input type="text" class="form-control" id="note-content" />
          <span class="input-group-btn">
            <button class="btn btn-default" type="button" ng-click="c.updateNotes()">Post</button>
          </span>
        </div>
      </div>
      <div class="form-group" id="note-list">
        <div ng-repeat="note in data.notes">
          <p><strong>{{note.sys_created_by}}:</strong> {{note.value}}</p>
        </div>
      </div>

    </form>
  </div>
  <div class="panel-footer text-right">
    <button class="btn btn-primary" ng-click="c.updateTask()">Save</button>
  </div>
</div>

</script>]]></template>
    </sp_widget>
</record_update>
